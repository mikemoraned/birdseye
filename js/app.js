// Generated by CoffeeScript 1.4.0
(function() {
  var App, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  if ((_ref = window.birdseye) == null) {
    window.birdseye = {};
  }

  App = (function() {

    function App() {
      this._error = __bind(this._error, this);

      this._fetchOrganisations = __bind(this._fetchOrganisations, this);

      var _this = this;
      this.organisations = ko.observableArray([]);
      this.selectedOrganisation = ko.observable();
      this.user = ko.observable(new birdseye.User());
      this.errors = ko.observable(new birdseye.Errors());
      this.memberFilter = ko.observable("");
      this.user().organisationIds.subscribe(this._fetchOrganisations);
      this.selectedOrganisation.subscribe(function(org) {
        if (org != null) {
          return org.loadAll();
        }
      });
    }

    App.prototype._fetchOrganisations = function() {
      var _this = this;
      console.log("Fetching orgs");
      this.organisations([]);
      return this.user().organisationIds().forEach(function(id) {
        console.log("Fetching org with id: " + id);
        return Trello.organizations.get(id, {}, function(data) {
          var org;
          org = new birdseye.Organisation(id, data.displayName, _this.errors(), _this.memberFilter);
          _this.organisations.push(org);
          if (_this.organisations.length === 1) {
            return _this.selectedOrganisation(org);
          }
        }, _this._error);
      });
    };

    App.prototype._error = function(m) {
      this.errors().add(m);
      return console.log("App: Error: " + m);
    };

    return App;

  })();

  window.birdseye.App = App;

}).call(this);
