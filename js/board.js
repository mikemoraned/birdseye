// Generated by CoffeeScript 1.6.1
(function() {
  var Board, _ref,
    _this = this;

  if ((_ref = window.birdseye) == null) {
    window.birdseye = {};
  }

  Board = (function() {

    function Board(id, name, url, memberships, memberFilter, adminsOnly, nonOrgOnly) {
      var _this = this;
      this.id = id;
      this._filterByNonOrgOnly = function(nonOrgOnly, memberships) {
        return Board.prototype._filterByNonOrgOnly.apply(_this, arguments);
      };
      this._filterByAdmin = function(adminsOnly, memberships) {
        return Board.prototype._filterByAdmin.apply(_this, arguments);
      };
      this._filterByName = function(memberFilter, memberships) {
        return Board.prototype._filterByName.apply(_this, arguments);
      };
      this.name = ko.observable(name);
      this.url = ko.observable(url);
      this.totalMembers = ko.observable(memberships.length);
      this.memberships = ko.computed(function() {
        return _this._filterByNonOrgOnly(nonOrgOnly, _this._filterByAdmin(adminsOnly, _this._filterByName(memberFilter, memberships)));
      });
    }

    Board.prototype._filterByName = function(memberFilter, memberships) {
      var _this = this;
      if (memberFilter() != null) {
        return memberships.filter(function(m) {
          return m.member().matches(memberFilter());
        });
      } else {
        return memberships;
      }
    };

    Board.prototype._filterByAdmin = function(adminsOnly, memberships) {
      var _this = this;
      if (adminsOnly()) {
        return memberships.filter(function(m) {
          return m.type() === 'admin';
        });
      } else {
        return memberships;
      }
    };

    Board.prototype._filterByNonOrgOnly = function(nonOrgOnly, memberships) {
      var _this = this;
      if (nonOrgOnly()) {
        return memberships.filter(function(m) {
          return !m.orgMember();
        });
      } else {
        return memberships;
      }
    };

    return Board;

  })();

  window.birdseye.Board = Board;

}).call(this);
